-----------------------------------------------------------------------------
--                                                                          -
--  Copyright 1997, University of Cambridge Computer Laboratory             -
--                                                                          -
--  All Rights Reserved.					            -
--                                                                          -
-----------------------------------------------------------------------------
--
-- INTERFACE:
--
--      SCSIController.if
-- 
-- DESCRIPTION:
--
--      SCSI Controller types and operations. 
-- 
-- FILE :	SCSIController.if
-- CREATED :	Thu Jan 16 1997
-- AUTHOR :	Paul Barham (Paul.Barham@cl.cam.ac.uk)
-- ID : 	$Id: SCSIController.if 1.1 Thu, 18 Feb 1999 14:19:15 +0000 dr10009 $
-- 
-- \chapter{Devices}
-- \section{SCSI}

-- The "SCSIController" interface is used by higher level SCSI drivers to 
-- enqueue commands for the devices they manage.  For example, SCSI disks
-- or scanners use this interface to enqueue requests.  The controller only
-- knows about generic SCSI commands.

-- The "SCSIController" interface is asynchronous.

-- This interface bears a strong resemblance to the low level SCSI
-- interfaces in the Linux kernel... mainly because the first
-- implementations were ported from Linux.  Some rationalisation may
-- be required at a later date.

SCSIController : LOCAL INTERFACE =
	NEEDS SCSI;
	NEEDS SCSICallback;
BEGIN

	Reset : PROC [] RETURNS [];

	-- Reset the SCSI bus.

	Queue : PROC [ target  : SCSI.Target,
	               lun     : SCSI.LUN,
		       command : SCSI.Command,
	               buf     : ADDRESS,
	               len     : CARDINAL,
		       scb     : IREF SCSICallback ]
	        RETURNS [ c : SCSI.ResultCode,
	                  h : SCSI.CommHandle ];

	-- Enqueue a SCSI command "command" for device "$(target, lun)$".  
	-- An optional buffer may be specified using "buf" and "len".
	-- The result code "c" indicates whether the command was enqueued
	-- successfully.  Clients may subsequently use the handle "h" to 
	-- refer to this transaction.

	-- When the command completes, or is aborted, the appropriate "scb"
	-- callback will be invoked.

	Abort : PROC [ h : SCSI.CommHandle ] 
	        RETURNS [ c : SCSI.AbortCode ];

	-- Abort the SCSI transaction associated with handle "h".

END.
