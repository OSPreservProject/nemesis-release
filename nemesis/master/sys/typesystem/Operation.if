-----------------------------------------------------------------------------
--                                                                          -
--  Copyright 1994, University of Cambridge Computer Laboratory             -
--                                                                          -
--  All Rights Reserved.					            -
--                                                                          -
-----------------------------------------------------------------------------
--
-- INTERFACE:
--
--      Operation
-- 
-- DESCRIPTION:
--
--      Representation of a Middl operation
-- 
-- ID : $Id: Operation.if 1.1 Thu, 18 Feb 1999 14:16:19 +0000 dr10009 $
-- 
-- \chapter{Runtime Type System}
-- 
-- 

-- The "TypeSystem" represents each method within a \MIDDL\
-- interface type by an instance of the "Operation" interface.

Operation : LOCAL INTERFACE =
  EXTENDS Context;
  NEEDS Interface;
  NEEDS Exception;
BEGIN
  
  -- The procedures inherited from "Context" map the names of each of
  -- the operation fields (arguments and results) to instances of the
  -- "Parameter" data type. The sequence returned by the "List" method
  -- contains the parameters in the order in which they were defined, thus
  -- all those of kind "Result" come after the others.

  ParamMode : TYPE = { In, Out, InOut, Result };
    -- what sort of parameter this is.

  Parameter : TYPE = RECORD [ type : Type.Code,
                              mode : ParamMode ];
    -- returned by the context.

  -- Operations themselves come in three flavours:

  Kind : TYPE = { Proc, Announcement, NoReturn };

  -- An operation is provided to return miscellaneous information
  -- about an operation:

  Info : PROC    [] 
      	 RETURNS [ kind : Kind,
      	      	   name : STRING,
      	      	      i : IREF Interface,
                      n : CARDINAL,
      	      	a, r, e : CARDINAL        ];
    -- Return the kind of operation, its name and interface, the
    -- number of the operation within the interface, and the
    -- numbers of arguments, results and exceptions respectively.

  -- Finally, one can obtain a list of exceptions raised by the
  -- operation:

  Exceptions : PROC    [ h : IREF Heap ]
      	       RETURNS [ l : Exception.List ]
      	       RAISES Heap.NoMemory;

END.
