-----------------------------------------------------------------------------
--                                                                          -
--  Copyright 1994, University of Cambridge Computer Laboratory             -
--                                                                          -
--  All Rights Reserved.					            -
--                                                                          -
-----------------------------------------------------------------------------
--
-- INTERFACE:
--
--      StringTbl.if
-- 
-- DESCRIPTION:
--
--      Hash table mapping STRINGs to ADDRESS
-- 
-- ID : $Id: StringTbl.if 1.1 Thu, 18 Feb 1999 14:16:19 +0000 dr10009 $
-- 
-- \chapter{Tables}
-- \section{String}

-- A "StringTbl" is a partial map from "STRING"s to "ADDRESS"es.
-- A typical implementation will use a hash table.

StringTbl : LOCAL INTERFACE =
  NEEDS StringTblIter;
BEGIN

  -- There is no internal concurrency control in a "StringTbl".
  -- Clients must ensure that conflicting operations are never
  -- executed concurrently.  "Get", "Size" and "Iterate" are readers,
  -- while "Put" and "Delete" are writers.

  Key : TYPE = STRING;
  Val : TYPE = DANGEROUS ADDRESS;

  Get     : PROC [ k: Key; OUT v: Val ] RETURNS [ b: BOOLEAN ];
    -- If "k" $\in$ "dom(self)" then set "v := self[k]" and return "True";
    -- otherwise return "False", leaving "v" unchanged.

  Put     : PROC [ k: Key; v: Val ] RETURNS [ b: BOOLEAN ];
    -- Return "k" $\in$ "dom(self)" and set "self[k] := v".

  Delete  : PROC [ k: Key; OUT v: Val ] RETURNS [ b: BOOLEAN ];
    -- If "k" $\in$ "dom(self)" then set "v := self[k]", remove "k" from
    -- "dom(self)" and return "True"; otherwise return "False", leaving
    -- "v" unchanged.

  Size    : PROC [] RETURNS [ sz: CARDINAL ];
    -- Return the number of entries in "self" (ie. "|dom(self)|").

  Iterate : PROC [] RETURNS [ it: IREF StringTblIter ];
    -- Return an iterator for "self".

  Dispose : PROC [] RETURNS [];
    -- Free the current "StringTbl".

END.
