-----------------------------------------------------------------------------
--                                                                          -
--  Copyright 1997, University of Cambridge Computer Laboratory             -
--                                                                          -
--  All Rights Reserved.                                                    -
--                                                                          -
-----------------------------------------------------------------------------
--
-- INTERFACE:
--
--      Event.if
-- 
-- DESCRIPTION:
--
--      Base types for event counts and sequencers.
-- 
-- \chapter{User Level Schedulers}
-- 

--
-- Nemesis uses "Event"s and "Channel"s as the abstraction for
-- communication betweeen virtual processors. This interface defines
-- the basic types (including exceptions) for the "Events" and
-- associated interfaces.

Event : LOCAL INTERFACE = 
BEGIN

  -- 
  -- Types
  -- 

  -- An event count is a monotonically increasing value of type "Val"
  -- associated with a domain.  An event count is identified within its
  -- domain by a "Count".

  Val   : TYPE = WORD;
  Count : TYPE = WORD;                   -- Opaque

  -- Each end of an inter-domain communication ("IDC") channel has one
  -- one or more "(rx, tx)" pairs of event counts connected to corresponding
  -- pairs at the peer domain.

  Pair  : TYPE = RECORD [ rx, tx: Count ];
  Pairs : TYPE = SEQUENCE OF Pair;

  -- Threads can order their actions by waiting on counts for
  -- values obtained from a \emph{sequencer}.
  Sequencer : TYPE = WORD;               -- Opaque


END.
