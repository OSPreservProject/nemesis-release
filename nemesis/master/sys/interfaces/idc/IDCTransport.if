-----------------------------------------------------------------------------
--                                                                          -
--  Copyright 1994, University of Cambridge Computer Laboratory             -
--                                                                          -
--  All Rights Reserved.					            -
--                                                                          -
-----------------------------------------------------------------------------
--
-- INTERFACE:
--
--      IDC Transport
-- 
-- DESCRIPTION:
--
--      Interface to IDC transport mechanisms
-- 
-- ID : $Id: IDCTransport.if 1.1 Thu, 18 Feb 1999 14:16:19 +0000 dr10009 $
-- 
-- 
-- \chapter{Inter-Domain Communication}
-- 

-- An "IDCTransport" interface represents a particular mechanism for
-- communication. It is used to create "IDCOffer"s and corresponding
-- "IDCService"s, which are interfaces hiding the business of creating
-- bindings between domains. To offer a particular interface, an
-- application calls "IDCTransport.Offer" supplying a closure for the
-- service itself. The result is an "IDCOffer" which other applications can
-- invoke in their own protection domains to create bindings to the
-- service, and an "IDCService" which is used by the server's domain
-- to control and withdraw the service, and is also called by the
-- domains "ObjectTable" when a bind request generated by the
-- "IDCOffer" comes in,

IDCTransport : LOCAL INTERFACE =
  NEEDS Type;
  NEEDS Heap;
  NEEDS Gatekeeper;
  NEEDS Entry;
  NEEDS IDCOffer;
  NEEDS IDCCallback;
  NEEDS IDCService;
BEGIN

  -- Create an "IDCOffer". The server can be any closure, passed as a
  -- "Type.Any". The type information is used by the "IDCTransport" to
  -- select an approriate pair of client and server stubs. 

  -- The server can pass in an "IDCCallback" which is upcalled as a 
  -- result of a connection request, successful binding and when a
  -- binding is destroyed.  

  -- The "Heap" is used to create storage for the state and closure;
  -- it should therefore be in a stretch readable by any domains which
  -- might get hold of this offer.  The "Gatekeeper" "gk" will be used
  -- to allocate per-connection shared memory, and the "entry" will be
  -- used to schedule servicing of events on connections once they
  -- have been established.

  Offer : PROC    [ server : Type.Any,
 		               scb : IREF IDCCallback,
      	              heap : IREF Heap,
      	      	        gk : IREF Gatekeeper,
                     entry : IREF Entry       ]
      	  RETURNS [  offer : IREF IDCOffer,
                   service : IREF IDCService  ]
      	  RAISES Heap.NoMemory;
  
END.
